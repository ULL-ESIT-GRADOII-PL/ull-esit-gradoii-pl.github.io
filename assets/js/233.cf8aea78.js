(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{745:function(a,s,t){"use strict";t.r(s);var e=t(5),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"ü¶é-putoutscript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ü¶é-putoutscript"}},[a._v("#")]),a._v(" ü¶é PutoutScript")]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("Among the maxims on Lord Naoshige‚Äôs wall there was this one: ‚ÄùMatters of‚Äô great concern should be treated lightly.‚Äù\nMaster lttei commented, ‚ÄúMatters of small concern should be treated seriously.‚Äù")])]),a._v(" "),t("p",[t("strong",[a._v('(c) Yamamoto Tsunetomo "Hagakure"')])])]),a._v(" "),t("p",[a._v("ü¶é"),t("strong",[a._v("PutoutScript")]),a._v(" ‚Äî "),t("strong",[a._v("JavaScript")]),a._v("-compatible language which adds additional meaning to "),t("code",[a._v("Identifiers")]),a._v(" in AST-template. It is supported by all types of "),t("a",{attrs:{href:"https://github.com/coderaiser/putout/tree/master/packages/engine-runner#supported-plugin-types",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[a._v("üêäPutout plugins")]),t("OutboundLink")],1),a._v(".\nTake a look at "),t("a",{attrs:{href:"https://github.com/coderaiser/putout/tree/master/packages/compare#supported-template-variables",target:"_blank",rel:"noopener noreferrer"}},[a._v("rule syntax"),t("OutboundLink")],1),a._v(" for more information.")]),a._v(" "),t("p",[a._v("‚òùÔ∏è "),t("em",[a._v("In the command line, patterns are specified with a flag "),t("code",[a._v("--transform")]),a._v(".")])]),a._v(" "),t("h2",{attrs:{id:"pattern-matching"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pattern-matching"}},[a._v("#")]),a._v(" Pattern matching")]),a._v(" "),t("p",[a._v("Pattern matching searches code for a given pattern. For example, the expression pattern "),t("code",[a._v("say('hello üêä')")]),a._v(" can match a full expression or be part of a subexpression:")]),a._v(" "),t("p",[t("code",[a._v("loud(say('hello üêä'))")])]),a._v(" "),t("p",[a._v("In the same way, the statement pattern "),t("code",[a._v("return __")]),a._v(" can match a top "),t("code",[a._v("statement")]),a._v(" in a "),t("code",[a._v("function")]),a._v(" or any nested "),t("code",[a._v("statement")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("when")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'now'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'laiter'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h2",{attrs:{id:"template-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#template-value"}},[a._v("#")]),a._v(" "),t("code",[a._v("__")]),a._v(" template value")]),a._v(" "),t("p",[a._v("The double low dush template value ("),t("code",[a._v("__")]),a._v(") abstracts away "),t("code",[a._v("Identifiers")]),a._v(", "),t("code",[a._v("Expressions")]),a._v(" and "),t("code",[a._v("Literals")]),a._v(".")]),a._v(" "),t("h2",{attrs:{id:"args-template-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#args-template-value"}},[a._v("#")]),a._v(" "),t("code",[a._v("__args")]),a._v(" template value")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("__args")]),a._v(" template value abstracts away a sequence of zero or more arguments.")]),a._v(" "),t("h2",{attrs:{id:"function-calls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#function-calls"}},[a._v("#")]),a._v(" Function calls")]),a._v(" "),t("p",[a._v("Use the "),t("code",[a._v("__args")]),a._v(" template value to search for function calls with arguments. For example, the pattern "),t("code",[a._v("sey(__args)")]),a._v(" finds calls regardless of its arguments.")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello üêä'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"method-calls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#method-calls"}},[a._v("#")]),a._v(" Method calls")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("__args")]),a._v(" template value can also be used to search for method calls. For example, the pattern "),t("code",[a._v("__object.say(__args)")]),a._v(" matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("crocodile"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello üêä'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("The "),t("code",[a._v("__")]),a._v(" template value can also be used for the function name. Indeed, In some cases, you may want to match any function definitions: regular functions, methods, but also arrow functions.\nIn that case you can use "),t("code",[a._v("__")]),a._v(" in place of the name of the function to match named or anonymous functions. For example, the pattern "),t("code",[a._v("function __(__a) {}")]),a._v(" will match any function with one parameter:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello üêä'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("talk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello üêä'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h2",{attrs:{id:"strings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[a._v("#")]),a._v(" Strings")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v('"__a"')]),a._v(" template value can be used to search for strings containing any data. The pattern "),t("code",[a._v('crocodile.say("__a")')]),a._v(" matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("crocodile"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello üêä'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("This also works with constant propagation.")]),a._v(" "),t("p",[a._v("In languages where regular expressions use a special syntax (e.g., Javascript), the pattern "),t("code",[a._v("/__a/")]),a._v(" will match any regular expression construct:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" animalRegExp "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[a._v("üêä|ü¶õ")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[a._v("/")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"binary-operations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binary-operations"}},[a._v("#")]),a._v(" Binary operations")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("__a")]),a._v(" can match arguments to binary operations. The pattern "),t("code",[a._v("const __a = __b + __c")]),a._v(" matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" friends "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'üêä'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ü¶õ'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"containers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#containers"}},[a._v("#")]),a._v(" Containers")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("__array")]),a._v(" and "),t("code",[a._v("__object")]),a._v(" template values can match container data structures like, arrays, objects.")]),a._v(" "),t("p",[a._v("The pattern "),t("code",[a._v("const friends = __array")]),a._v(" matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" friends "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'üêä'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ü¶õ'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("The pattern "),t("code",[a._v("const animal = __object")]),a._v(" matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" animal "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[a._v("'üêä'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ü¶õ'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h2",{attrs:{id:"conditionals-and-loops"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conditionals-and-loops"}},[a._v("#")]),a._v(" Conditionals and loops")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("__")]),a._v(" can be used inside conditionals or loops. ü¶é "),t("strong",[a._v("PutoutScript")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    __b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("friends"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("includes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'üêä'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("üêä friend of ü¶õ")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("Template variables can match a conditional or loop body if the body statement information is re-used later. ü¶é "),t("strong",[a._v("PutoutScript")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    __body"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("friends"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("includes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ü¶õ'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("ü¶õ friend of üêä")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h2",{attrs:{id:"template-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#template-variables"}},[a._v("#")]),a._v(" Template variables")]),a._v(" "),t("p",[a._v("Template variables are an abstraction to match code when you don‚Äôt know the value or contents ahead of time, similar to capture groups in regular expressions.\nTemplate variables can be used to track values across a specific code scope. This includes variables, functions, arguments, classes, object methods, imports and more.")]),a._v(" "),t("p",[a._v("Template variables look like "),t("code",[a._v("__a")]),a._v(", "),t("code",[a._v("__b")]),a._v(", etc. They begin with a "),t("code",[a._v("__")]),a._v(" and can only contain one character.")]),a._v(" "),t("h2",{attrs:{id:"expression-template-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expression-template-variable"}},[a._v("#")]),a._v(" Expression template variable")]),a._v(" "),t("p",[a._v("ü¶é "),t("strong",[a._v("PutoutScript")]),a._v(" "),t("code",[a._v("__a + __b")]),a._v(" matches the following code examples:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'üêä'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'üìº'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"import-template-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#import-template-variable"}},[a._v("#")]),a._v(" Import template variable")]),a._v(" "),t("p",[a._v("Template variable "),t("code",[a._v("__imports")]),a._v(" can be used to match imports. For example, "),t("code",[a._v("import __imports")]),a._v(" matches:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" fs "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'fs/promises'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"reoccuring-template-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reoccuring-template-variable"}},[a._v("#")]),a._v(" Reoccuring template variable")]),a._v(" "),t("p",[a._v("Re-using template variables shows their true power. Detect assignment of sum of duplicate nodes:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" __a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" __b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" __b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("Assignment of duplicate nodes sum detected:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"literal-template-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#literal-template-variable"}},[a._v("#")]),a._v(" Literal template variable")]),a._v(" "),t("p",[a._v("You can use "),t("code",[a._v('"__a"')]),a._v(" to match any string literal. This is similar to using "),t("code",[a._v("__a")]),a._v(", but the content of the string is stored in the template variable "),t("code",[a._v("__a")]),a._v(", which can then be used later.")]),a._v(" "),t("h2",{attrs:{id:"typed-template-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typed-template-variable"}},[a._v("#")]),a._v(" Typed template variable")]),a._v(" "),t("p",[a._v("Same thing works with "),t("code",[a._v("TypeScript")]),a._v(" types, such pattern "),t("code",[a._v("const __a: __b = __c")]),a._v(", finds:")]),a._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" answer"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("number")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("42")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"statements-and-expressions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#statements-and-expressions"}},[a._v("#")]),a._v(" Statements and expressions")]),a._v(" "),t("p",[a._v("JavaScript differentiate between expressions and statements. Expressions can appear inside "),t("code",[a._v("if")]),a._v(" conditions, in "),t("code",[a._v("function")]),a._v(" call "),t("code",[a._v("arguments")]),a._v(", etc. Statements can not appear everywhere; they are sequence of operations (using "),t("code",[a._v(";")]),a._v(" as a separator/terminator) or special control flow constructs ("),t("code",[a._v("if")]),a._v(", "),t("code",[a._v("while")]),a._v(", etc.):")]),a._v(" "),t("ul",[t("li",[a._v("‚úÖ "),t("code",[a._v("say()")]),a._v(" is an expression")]),a._v(" "),t("li",[a._v("‚úÖ "),t("code",[a._v("say();")]),a._v(" is a statement")])]),a._v(" "),t("p",[a._v("When you write the expression "),t("code",[a._v("foo()")]),a._v(" in a pattern, ü¶é"),t("code",[a._v("PutoutScript")]),a._v(" will visit every expression and sub-expression in your program and try to find a match.")]),a._v(" "),t("h2",{attrs:{id:"partial-expressions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#partial-expressions"}},[a._v("#")]),a._v(" Partial expressions")]),a._v(" "),t("p",[a._v("Partial expressions are not valid patterns. For example, the following is invalid:")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'üêä' +\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("A complete expression is needed (like "),t("code",[a._v("'üêä' + __a")]),a._v("). Same with partial statements.")]),a._v(" "),t("p",[a._v("‚òùÔ∏è "),t("em",[a._v("Find what you needed in this doc? "),t("a",{attrs:{href:"https://github.com/coderaiser/putout/issues/new",target:"_blank",rel:"noopener noreferrer"}},[a._v("Create an issue"),t("OutboundLink")],1),a._v(" if you need any help üòè!")])])])}),[],!1,null,null,null);s.default=n.exports}}]);