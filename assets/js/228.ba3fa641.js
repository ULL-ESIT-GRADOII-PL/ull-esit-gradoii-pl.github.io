(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{742:function(t,s,e){"use strict";e.r(s);var a=e(5),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"how-to-write-the-transformation-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-write-the-transformation-module"}},[t._v("#")]),t._v(" How to write the transformation module")]),t._v(" "),e("p",[t._v("The transform is simply a module that exports a function of the form:")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fileInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// transform `fileInfo.source` here")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return changed source")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" source"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("Here is an example of transformation module:")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("âœ— cat hello"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jscodeshift"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * This replaces every occurrence of variable "foo".\n */')]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fileInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" api"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" api\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("jscodeshift")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findVariableDeclarators")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("renameTo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toSource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("As of v0.6.1, this module can also be written in TypeScript.")]),t._v(" "),e("h2",{attrs:{id:"the-arguments-of-the-exported-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-arguments-of-the-exported-function"}},[t._v("#")]),t._v(" The Arguments of the Exported Function")]),t._v(" "),e("h3",{attrs:{id:"argument-fileinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argument-fileinfo"}},[t._v("#")]),t._v(" Argument "),e("code",[t._v("fileInfo")])]),t._v(" "),e("p",[t._v("Holds information about the currently processed file.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("path")])]),t._v(" "),e("td",[t._v("File path")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("source")])]),t._v(" "),e("td",[t._v("File content")])])])]),t._v(" "),e("h3",{attrs:{id:"argument-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argument-api"}},[t._v("#")]),t._v(" Argument "),e("code",[t._v("api")])]),t._v(" "),e("p",[t._v("This object exposes the "),e("code",[t._v("jscodeshift")]),t._v(" library and helper functions from the\nrunner.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("jscodeshift")])]),t._v(" "),e("td",[t._v("A reference to the jscodeshift library")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("stats")])]),t._v(" "),e("td",[t._v("A function to collect statistics during "),e("code",[t._v("--dry")]),t._v(" runs")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("report")])]),t._v(" "),e("td",[t._v("Prints the passed string to stdout")])])])]),t._v(" "),e("p",[e("code",[t._v("jscodeshift")]),t._v(" is a reference to the wrapper around recast and provides a\njQuery-like API to navigate and transform the AST.")]),t._v(" "),e("p",[e("code",[t._v("stats")]),t._v(" is a function that only works when the "),e("code",[t._v("--dry")]),t._v(" options is set. It accepts\na string, and will simply count how often it was called with that value.")]),t._v(" "),e("p",[t._v("At the end, the CLI will report those values. This can be useful while\ndeveloping the transform, e.g. to find out how often a certain construct\nappears in the source(s).")]),t._v(" "),e("p",[e("code",[t._v("report")]),t._v(" allows you do print arbitrary strings to stdout. This can be\nuseful when other tools consume the output of jscodeshift. The reason to not\ndirectly use "),e("code",[t._v("process.stdout")]),t._v(" in transform code is to avoid mangled output when\nmany files are processed.")]),t._v(" "),e("h3",{attrs:{id:"argument-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argument-options"}},[t._v("#")]),t._v(" Argument "),e("code",[t._v("options")])]),t._v(" "),e("p",[t._v("Contains all options that have been passed to runner. This allows you to pass\nadditional options to the transform. For example, if the CLI is called with")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ jscodeshift -t myTransforms fileA fileB --foo=bar\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("code",[t._v("options")]),t._v(" would contain "),e("code",[t._v("{foo: 'bar'}")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"return-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#return-value"}},[t._v("#")]),t._v(" Return value")]),t._v(" "),e("p",[t._v("The return value of the function determines the status of the transformation:")]),t._v(" "),e("ul",[e("li",[t._v("If a string is returned and it is different from passed source, the\ntransform is considered to be "),e("strong",[t._v("successful")]),t._v(".")]),t._v(" "),e("li",[t._v("If a string is returned but it's the same as the source, the transform\nis considered to be "),e("strong",[t._v("unsuccessful")]),t._v(".")]),t._v(" "),e("li",[t._v("If nothing is returned, the file is not supposed to be transformed (which is\nok).")])]),t._v(" "),e("p",[t._v("The CLI provides a summary of the transformation at the end. You can get more\ndetailed information by setting the "),e("code",[t._v("-v")]),t._v(" option to "),e("code",[t._v("1")]),t._v(" or "),e("code",[t._v("2")]),t._v(".")]),t._v(" "),e("p",[t._v("You can collect even more stats via the "),e("code",[t._v("stats")]),t._v(" function as explained above.")]),t._v(" "),e("h2",{attrs:{id:"parser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parser"}},[t._v("#")]),t._v(" Parser")]),t._v(" "),e("p",[t._v("The transform can let jscodeshift know with which parser to parse the source\nfiles (and features like templates).")]),t._v(" "),e("p",[t._v("To do that, the transform module can export "),e("code",[t._v("parser")]),t._v(", which can either be one\nof the strings "),e("code",[t._v('"babel"')]),t._v(", "),e("code",[t._v('"babylon"')]),t._v(", "),e("code",[t._v('"flow"')]),t._v(", "),e("code",[t._v('"ts"')]),t._v(", or "),e("code",[t._v('"tsx"')]),t._v(",\nor it can be a parser object that is compatible with recast.")]),t._v(" "),e("p",[t._v("For example:")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flow'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use the flow parser")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parser "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("parse")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return estree compatible AST")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"example-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-output"}},[t._v("#")]),t._v(" Example output")]),t._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ jscodeshift -t myTransform.js src\nProcessing 10 files...\nSpawning 2 workers with 5 files each...\nAll workers done.\nResults: 0 errors 2 unmodified 3 skipped 5 ok\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),e("p",[t._v("See the section "),e("a",{attrs:{href:"tree-transformations-references"}},[t._v("references about AST transformations")])])])}),[],!1,null,null,null);s.default=n.exports}}]);